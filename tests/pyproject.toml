[project]
name = "htty-test-env"
version = "0.1.0"
description = "Test environment for htty wheel testing - dependency specification only"
requires-python = ">=3.8"

# Test dependencies only - htty will be provided by htty-pylib
dependencies = [
    "pytest>=7.0",
    "fawltydeps",  # For dependency analysis of all workspaces
    "pyright",     # For type checking all workspaces
    "pdoc",        # For API documentation generation
    # htty is provided separately by htty-pylib input
]

# Build system configuration to prevent setuptools from treating test directories as packages
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Explicitly specify what to include - just the pyproject.toml and conftest.py, no test directories as packages
[tool.hatch.build.targets.wheel]
sources = []
packages = []
include = [
    "pyproject.toml",
    "conftest.py"
]

[dependency-groups]
analysis = [
    "fawltydeps",
]

[tool.pytest.ini_options]
# Only look for tests in the current directory (tests/)
testpaths = ["."]
python_files = "test_*.py"
# Ignore common directories that shouldn't contain tests
norecursedirs = [
    "result",
    ".git", 
    "target",
    "__pycache__",
    ".pytest_cache",
    "build",
    "dist",
    ".venv"
]
# Keep live logging enabled for debugging hanging tests
log_cli = true
log_cli_level = "WARNING"  # Only show warnings and errors by default
log_cli_format = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
log_auto_indent = true
# Custom marks for different test environments
markers = [
    "core: tests that need only htty-core (Rust binary + minimal Python bindings)",
    "wheel: tests that verify htty-core-wheel package produces correct Python wheel",
    "sdist: tests that verify htty-sdist package produces correct source distribution",
    "htty: tests that verify htty package contains expected files and binaries",
    "empty: tests that verify pytest-empty environment has no htty packages", 
    "cli: tests that verify pytest-cli environment has CLI tools but no Python module"
]
